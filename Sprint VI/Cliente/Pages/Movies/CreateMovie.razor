@page "/movies/create"
@inject NavigationManager navigationManager
@using PeliculasCODE5G.Client.Pages.Components
@inject IServiceMovie movie_i
@inject IErrorMessage showMessage

@if (ShowMoviesForm)
{
<FormMovie Movie="Movie" OnValidSubmit="Create" CategoriasNoSeleccionadas="CategoriasNoSeleccionadas"></FormMovie>
   
}else{
    <div class="alert alert-info" role="alert">Cargando</div>
 
}
@code {
    private Movie Movie = new Movie();
    private List<Category> CategoriasNoSeleccionadas = new List<Category>();
    @* No se cargaran las peliculas si no existen categor√≠as en el sistema *@
    private bool ShowMoviesForm{get;set;} = false;
    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await movie_i.Get<List<Category>>("api/categories");
        CategoriasNoSeleccionadas = responseHttp.Response;
        ShowMoviesForm = true;
    }
    async Task Create()
    {
        var httpResponse = await movie_i.Post<Movie, int>("api/movies", Movie);
        if (httpResponse.Error)
        {
            var body = await httpResponse.GetBody();
            await showMessage.ShowErrorMessage(body);
            Console.WriteLine(body);
        }
        else
        {
            var MovieId = httpResponse.Response;
            navigationManager.NavigateTo($"/movie/{MovieId}/{Movie.Name.Replace(" ", "-")}");
        }
    }
}


@*<FormMovie Movie="Movie" OnValidSubmit="Create" CategoriasNoSeleccionadas="CategoriasNoSeleccionadas"></FormMovie>
@code{
    private Movie Movie = new Movie();
    private List<Category> CategoriasNoSeleccionadas = new List<Category>();

    protected override void OnInitialized()
    {
        CategoriasNoSeleccionadas = new List<Category>(){
 new Category(){Id = 1, Name="Comedia"},
 new Category(){Id = 2, Name="Terror"},
 new Category(){Id = 3, Name="Ciencia Ficcion"},
 new Category(){Id = 4, Name="Documentales"},
 new Category(){Id = 5, Name="Accion"}
};
    }
    async Task Create()
    {
        var httpResponse = await repositorio.Post<Movie,int>("api/movies", Movie);
        if (httpResponse.Error)
        {
            var body = await httpResponse.GetBody();
            await showMessage.ShowErrorMessage(body);
            Console.WriteLine(body);
        }
        else
        {
            var MovieId = httpResponse.Response;
            navigationManager.NavigateTo($"/movie/{MovieId}/{Movie.Name.Replace("  ","-")}");
        }
    }*@

    @*void Create()
    {
        @*Con el navigationManager vamos a redireccionar al usuario a otras rutas dentro del sistema
        Console.WriteLine(navigationManager);
        navigationManager.NavigateTo("movie");
        Console.WriteLine($"Pelicula: {Movie.Name}");
        Console.WriteLine($"Premier: {Movie.Premier}");
        Console.WriteLine($"Poster: {Movie.Poster}");
        Console.WriteLine($"Sinopsis: {Movie.Sinopsis}");
    }*@
}